# Python program that creates quiz using GUI
 
#Import everything from tkinter
from tkinter import *
 
#Import messagebox as mb from tkinter
from tkinter import messagebox as mb
 
#Class to define the components of the GUI
class Quiz:
    
    def __init__(self):
         
        #Setingt question number to 0
        self.q_no=0
         
        self.display_title()
        self.display_question()
         

        self.opt_selected=IntVar()
         
        #Displaying radio button for the current question
        self.opts=self.radio_buttons()
        
        #Displaying options for the current question
        self.display_options()
         
        #Displaying the button for next and exit
        self.buttons()
         
        #Number of questions
        self.data_size=len(question)
         
        #Counter for correct answers
        self.correct=0
 
    def display_result(self):
         
        #Calculation of the wrong count
        wrong_count = self.data_size - self.correct
        correct = f"Correct: {self.correct}"
        wrong = f"Wrong: {wrong_count}"
         
        #Calculation of the percentage of correct answers
        score = int(self.correct / self.data_size * 100)
        result = f"Score: {score}%"
         
        #Message box to display the results
        mb.showinfo("Result", f"{result}\n{correct}\n{wrong}")
 
 
    def check_ans(self, q_no):
         
        #Checking if the selected option is correct
        if self.opt_selected.get() == answer[q_no]:
            return True

    def next_btn(self):
         
        #Checking if the answer is correct
        if self.check_ans(self.q_no):
             
            #If the answer is correct then it increments the correct by 1
            self.correct += 1
         
        #Incrementing the q_no counter
        self.q_no += 1
         
        if self.q_no==self.data_size:
             
            #If it is correct then it shows the score
            self.display_result()
             
            gui.destroy()
        else:
            self.display_question()
            self.display_options()
 
    def buttons(self):
         
        #The next button to move to the next Question
        next_button = Button(gui, text="Next",command=self.next_btn,
        width=10,bg="blue",fg="white",font=("ariel",16,"bold"))
         
        #Placing the button  on the screen
        next_button.place(x=350,y=380)
         
        #This is the second button which is the Quit button
        quit_button = Button(gui, text="Quit", command=gui.destroy,
        width=5,bg="black", fg="white",font=("ariel",16," bold"))
         
        #Placing the Quit button on the screen
        quit_button.place(x=700,y=50)
 
    def display_options(self):
        val=0
         
        self.opt_selected.set(0)
         
        #Looping over the options to be displayed for the text of the radio buttons.
        for option in options[self.q_no]:
            self.opts[val]['text']=option
            val+=1
 
 
    #Showing the current question on the screen
    def display_question(self):
         
        #Setting the question properties
        q_no = Label(gui, text=question[self.q_no], width=60,
        font=( 'ariel' ,16, 'bold' ), anchor= 'w' )
         
        #Placing the option on the screen
        q_no.place(x=70, y=100)
 
 
    #Displaing the Title
    def display_title(self):
         
        title = Label(gui, text="SDEV 140 Quiz",
        width=50, bg="green",fg="white", font=("ariel", 20, "bold"))
         
        #Placing of the title
        title.place(x=0, y=2)
 
    def radio_buttons(self):
         
        #Initialize the list with an empty list of options
        q_list = []
         
        #Position of the first option
        y_pos = 150
         
        #Adding the options to the list
        while len(q_list) < 2:
             
            #Setting the radio button properties
            radio_btn = Radiobutton(gui,text=" ",variable=self.opt_selected,
            value = len(q_list)+1,font = ("ariel",14))
             
            #Adding the button to the list
            q_list.append(radio_btn)
             
            #Placing the button
            radio_btn.place(x = 100, y = y_pos)
             
            y_pos += 40
         
        return q_list
 
#Creating the GUI Window
gui = Tk()
 
#Setting the size
gui.geometry("800x450")
 
#Setting the title
gui.title("SDEV 140 Quiz")
 
 
#Setting the questions, options, and answers
question = ["string is an example of a data type in Python.","Testing is a deliberate process that requires some planning and discipline on the programmer's part. ","Python is a loosely typed programming language.","In the maintenance phase of the waterfall model, the parts of a program are brought together into a smoothly functioning whole, usually not an easy task.","Simple Boolean expressions consist of the Boolean values True or False, variables bound to those values, function calls that return Boolean values, or comparisons.","The simplest form of selection is the if-else statement.","The not operator has a lower precedence than the and and or operators.","The or operator returns True if and only if both of its operands are true, and returns False otherwise.", "The string is a mutable data structure.", "A data structure is a compound unit that consists of several smaller pieces of data."]

options = (
        ["False",
         "True"
        ]
         ),
answer = ([
        1,
        2,
        1,
        1,
        2,
        1,
        2,
        1,
        1,
        2
    ]
          )
 
#Creating an object of the Quiz Class.
quiz = Quiz()
 
gui.mainloop()
